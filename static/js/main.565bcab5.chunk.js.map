{"version":3,"sources":["components/LinhaCor.js","components/TabelaCores.js","containers/Lista/Lista.js","components/Cores.js","components/Gradient.js","components/Buttons.js","containers/Cadastro/Cadastro.js","containers/App.js","serviceWorker.js","index.js"],"names":["LinhaCor","props","react_default","a","createElement","className","nome","style","background","id","onClick","editColor","deleteColor","TabelaCores","lista","data","map","row","index","key","components_LinhaCor","gradient","Lista","this","fetchData","render","components_TabelaCores","addColor","React","Component","Cores","type","name","onChange","setInputColor","placeholder","cleanInput","value","deleteRow","Gradient","Buttons","onSubmit","handleContainer","Cadastro","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addRow","colorList","n","slice","btn","document","querySelector","newID","concat","Number","disabled","handleMessage","push","cor","handleColorList","e","target","findIndex","x","splice","setGradient","array","color","string","toString","handleGradient","input","_this2","_this$props","handleName","rows","components_Cores","components_Gradient","components_Buttons","message","initialState","container","mode","url","App","fetch","then","resp","json","setState","_this$state","state","length","method","headers","Content-Type","body","JSON","stringify","catch","err","window","setTimeout","confirm","console","log","cl","msg","containers_Lista_Lista","containers_Cadastro_Cadastro","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","containers_App","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.565bcab5.chunk.js","sourcesContent":["import React from 'react';\n\nconst LinhaCor = (props) => {\n\treturn(\n\t\t<div className='linha-cor'>\n\t\t\t\t<p className='lname'>{props.nome}</p>\n\t\t\t\t<div \n\t\t\t\t\tclassName='legenda'\n\t\t\t\t\tstyle={{background: props.background}}\n\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t\t<i id={props.nome}onClick={props.editColor} className=\"fa fa-edit icon\"></i>\n\t\t\t\t<i id={props.nome} onClick={props.deleteColor} className=\"fa fa-trash icon\"></i>\n\t\t</div>\n\t)\n}\n\nexport default LinhaCor;\n","import React from 'react';\nimport LinhaCor from './LinhaCor';\n\nconst TabelaCores = (props) => {\n\n\t\tconst lista = props.data.map((row, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t<LinhaCor \n\t\t\t\t\t\t\tnome={row.id} \n\t\t\t\t\t\t\tbackground={row.gradient} \n\t\t\t\t\t\t\teditColor={props.editColor} \n\t\t\t\t\t\t\tdeleteColor={props.deleteColor}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})\n\n\t\treturn(\n\t\t\t<div className='lista-cor'>\n\t\t\t\t{lista}\n\t\t\t</div>\n\t\t)\t\t\n}\n\nexport default TabelaCores;","import React, { Component } from 'react';\nimport TabelaCores from '../../components/TabelaCores';\n\n\nclass Lista extends React.Component{\n\t//Faz a lista na hora que o componente é montado\n\tcomponentDidMount(){\n\t\tthis.props.fetchData();\n\t}\n\n\t\trender(){\n\t\t\treturn(\n\t\t\t\t<div className='lista container' id={this.props.render}>\n\t\t\t\t\t<div className='titulo-cor'>\n\t\t\t\t\t\t<h3>Nome</h3>\n\t\t\t\t\t\t<h3>Pré-visualização</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<TabelaCores \n\t\t\t\t\t\tdata={this.props.data}\n\t\t\t\t\t\teditColor={this.props.editColor}\n\t\t\t\t\t\tdeleteColor={this.props.deleteColor}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='cadastro-btn'>\n\t\t\t\t\t\t<button onClick={this.props.addColor} id='cadastro-btn'>Cadastrar Gradiente</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n}\n\nexport default Lista;","import React from 'react';\n\n\nconst Cores = (props) => {\n\t\treturn(\n\t\t\t<div className='row-cor'>\t\n\t\t\t\t<input \n\t\t\t\t\ttype='color' \n\t\t\t\t\tname=\"color\" \n\t\t\t\t\tid={props.id} \n\t\t\t\t\tonChange={props.setInputColor} \n\t\t\t\t\tplaceholder='Digite uma cor' \n\t\t\t\t\tonClick={props.cleanInput}\t\n\t\t\t\t\tvalue={props.background}\n\t\t\t\t\tstyle={{background: props.background}}\t\t\t\t\n\t\t\t\t/>\n\t\t\t\t<span>\n\t\t\t\t\t<i className=\"fa fa-trash icon\" onClick={props.deleteRow} id={props.id}></i>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\t\t\n}\n\nexport default Cores;","import React from 'react';\n\nconst Gradient = (props) => {\n\treturn(\n\t\t\t<div className='visual'>\n\t\t\t\t\t<span \n\t\t\t\t\t\tid='gradient'\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground: props.background, \n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t)\t\n}\n\nexport default Gradient;","import React from 'react';\n\nconst Buttons = (props) => {\n\treturn(\n\t\t<div className='save'>\n\t\t\t<button onClick={props.onSubmit} id='btn-submit'>Salvar</button>\n\t\t\t<button onClick={props.handleContainer}>Cancelar</button>\n\t\t</div>\n\t)\n}\n\nexport default Buttons;","import React, {Component} from 'react';\nimport Cores from '../../components/Cores';\nimport Gradient from '../../components/Gradient';\nimport Buttons from '../../components/Buttons';\n\nclass Cadastro extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\t//Inicia o gradiente com o state inicial\n\tcomponentDidMount(){\n\t\tthis.setGradient();\n\t}\n\n\t//Adiciona nova linha de cor \n\taddRow = () => {\n\t\t\tconst {colorList} = this.props;\n\n\t\t\tconst lastIndex = colorList.slice(-1);\n\t\t\tconst id = lastIndex[0].id;\t\t\t\t\t\n\t\t\tconst n = id.slice(-1);\t\t\t\t\t\t\n\n\t\t\tconst btn = document.querySelector('#btn-add');\n\n\t\t\tconst newID = `color${Number(n) + 1}`;\n\n\t\t\tif(newID === 'color10'){\n\t\t\t\tbtn.disabled = true;\n\t\t\t\tthis.props.handleMessage('Limite de cores excedido');  \n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcolorList.push({cor: '#fff', id: newID}); \n\t\t\tthis.props.handleColorList(colorList)\n\n\t\t}\n\n\t\t//deleta Linha de cor\n\t\tdeleteRow = (e) => {\n\t\t\tconst row = e.target.id;\n\t\t\tconst {colorList} = this.props;\n\t\t\tconst index = colorList.findIndex(x => x.id === row);\t\n\n\t\t\tcolorList.splice(index,1); \n\n\t\t\tthis.props.handleColorList(colorList);\n\t\t\tthis.setGradient();\n\n\t\t}\n\n\t\t//atualiza gradiente com as cores das linhas\n\tsetGradient = () => {\n\t\tconst {colorList} = this.props;\n\n\t\tconst array = colorList.map((color) => {\n\t\t\treturn color.cor\n\t\t})\n\n\t\tlet string = \n\t\t`\n\t\t\tlinear-gradient(to right,\n\t\t\t${array.toString()}\n\t\t\t)\n\t\t`\t\t\n\t\tthis.props.handleGradient(string)\n\n\t}\n\n\t//atualiza background das linhas \n\tsetInputColor = (e) => {\n\t\tconst input = e.target;\n\t\tconst color = e.target.value;\n\t\tconst {colorList} = this.props;\t\t\n\t\tconst index = colorList.findIndex(x => x.id === input.id); \n\n\t\tcolorList[index] = {cor: color, id: input.id}; \t\n\n\t\tthis.props.handleColorList(colorList);\n\t\t\n\t\tthis.setGradient();\n\n\t}\n\trender(){\n\t\tconst {colorList, name, gradient, handleName} = this.props;\n\t\tconst rows = colorList.map((row, index)=> {\n\t\t\treturn(\n\t\t\t\t<div key={`color${index}`} id={`divcolor${index}`}>\n\t\t\t\t\t<Cores\n\t\t\t\t\t\tbackground={colorList[index].cor}\n\t\t\t\t\t\tid={colorList[index].id}\n\t\t\t\t\t\tsetInputColor={this.setInputColor}\n\t\t\t\t\t\tdeleteRow={this.deleteRow}\n\t\t\t\t\t/>\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t\treturn(\n\t\t\t<main className='container cadastro'>\n\t\t\t\t<div className='nome'>\n\t\t\t\t\t<input type='text' \n\t\t\t\t\t\tplaceholder='Nome *' \n\t\t\t\t\t\tid='nome-cor' \n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={handleName}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Gradient \n\t\t\t\t\tbackground={gradient}\n\t\t\t\t/>\n\t\t\t\t<div className='cores'>\n\t\t\t\t\t{rows}\n\t\t\t\t\t<div className='add'>\n \t\t\t\t\t\t<button onClick={this.addRow} id='btn-add'>\n \t\t\t\t\t\t\t<i className=\"fa fa-plus\">&nbsp;&nbsp;Cor</i>\n \t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\t\t\t\n\n\t\t\t\t<Buttons \n\t\t\t\t\tonSubmit={this.props.onSubmit} \n\t\t\t\t\thandleContainer={this.props.handleContainer}\n\t\t\t\t/>\n\n\t\t\t\t<p className='message'>{this.props.message}</p>\n\t\t\t</main>\n\t\t)\n\t}\n}\n\nexport default Cadastro;","import React, { Component } from 'react';\nimport Lista from './Lista/Lista';\nimport Cadastro from './Cadastro/Cadastro';\nimport '../assets/main.css';\n\n\nconst initialState = {\n\t\tdata: [],\n\t\tcolor: '',\n\t\tcolorList: [{cor: '#fff', id:'color0'}, {cor: '#fff', id:'color1'}],\n\t\tname: '',\n\t\tgradient: '',\n\t\tmessage: '',\n\t\tcontainer: true,\n\t\tmode: 'post',\n\t\turl: 'https://lbjsondb.herokuapp.com/cores',\n}\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = initialState;\n\t}\n\t\n\t//Busca as cores cadastradas para fazer a lista\n\tfetchData = () =>{\n\t\tfetch('https://lbjsondb.herokuapp.com/cores')\n\t\t\t.then(resp => resp.json())\n\t\t\t.then(array => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: array\n\t\t\t\t});\n\t\t\t})\n\t}\n\n\t//Salva valores no db.json\n\tonSubmit = () => {  \n      const {colorList,name,gradient,mode, url} = this.state;\n\n      if(name.length === 0){\n      \tthis.setState({message: 'Campo(s) vazio!'});\n      } else{\n\t       fetch(url, {\n\t          method: mode,\n\t          headers: {'Content-Type': 'application/json'},\n\t          body: JSON.stringify({\n\t           \tcolorList: colorList,\n\t            gradient: gradient,\n\t            id: name,\n\t          })\n\t        })        \n\t          .catch(err => {\n\t            this.setState({message: 'ops, algo deu errado'});\n\t          });\n\t           this.setState({\n\t           \tcontainer: true,\n\t\t\t\turl: initialState.url\n\t           }) ; \n\n\t           window.setTimeout(() =>{ this.fetchData() }, 1000);\t\n      }\n    }\n\n    //deleta cor no db.jsom\n    deleteColor = (e) => {\n\t    const name = e.target.id;\n\t\tconst {data} = this.state;\n\t\t\tif (window.confirm(\"Deseja deletar a cor?\")) {\n  \t\t\t\tfetch(`https://lbjsondb.herokuapp.com/cores/${name}`, {\n\t\t          method: 'delete',\n\t\t          headers: {'Content-Type': 'application/json'}\t\t \n\t       \t\t })    \n\t          \t\t.catch(err => {\n\t            \t\tconsole.log('ops, algo deu errado');\n\t          \t\t});\n\n\t         window.setTimeout(() =>{ this.fetchData() }, 1000);\n\n\t\t\t} else {\n\t\t\t  \n\t\t\t}\n\t\t\t\t       \n    }\n\n    //abre janela de cadastro de cor em branco\n\taddColor = () =>{\n\t\tthis.setState({\n\t\t\tcolorList: initialState.colorList,\n\t\t\tname: initialState.name,\n\t\t\tgradient: initialState.gradient,\n\t\t\tmessage: initialState.message,\n\t\t\tcolor: initialState.color,\n\t\t\tcontainer: false,\n\t\t\tmode: 'post',\n\t\t\turl: initialState.url\n\t\t})\n\n\t}\n\n\t//abre janela de cor com dados anteriores\n\teditColor = (e) => {\n\t\tconst name = e.target.id;\n\t\tconst {data} = this.state;\n\t\tconst index = data.findIndex(x => x.id === name);\n\n\t\tthis.setState({\n\t\t\tcolorList: data[index].colorList,\n\t\t\tname: data[index].id,\n\t\t\tgradient: data[index].gradient,\n\t\t\tcontainer: false,\n\t\t\tmode: 'put',\n\t\t\turl: 'https://lbjsondb.herokuapp.com/cores/' + name\n\t\t})\n\t}\n\t//atualiza lista de cores\n\thandleColorList = (cl) => {\n\t\tthis.setState({colorList: cl})\n\t}\n\n\t//atualiza mensagem\n\thandleMessage = (msg) => {\n\t\tthis.setState({message: msg})\n\t}\n\n\t//atualiza gradiente string\n\thandleGradient = (string) => {\n\t\tthis.setState({gradient: string})\n\t}\n\n\t//atualiza nome da cor\n\thandleName = (e) => {\n\t\tthis.setState({name: e.target.value});\n\t}\n\n\t//reabre container com a lista\n\thandleContainer = (e) => {\n\t\tthis.setState({\n\t\t\tcontainer: true,\n\t\t\turl: initialState.url\n\t\t})\n\t}\n\n\t  render() {\n\t    return (\n\t      <div className=\"wrapper\">\n\n\t        {this.state.container ?\n\t        \t\t\t <Lista \n\t        \t         \tdata={this.state.data}\n\t        \t         \teditColor={this.editColor}\n\t        \t         \taddColor={this.addColor}\n\t        \t         \tfetchData={this.fetchData}\n\t        \t         \tdeleteColor={this.deleteColor}\n\t        \t         />\n\t        \t         :\n\t        \t         <Cadastro \n\t        \t         \tcolor={this.state.color}\n\t        \t         \tcolorList={this.state.colorList}\n\t        \t         \tname={this.state.name}\n\t        \t         \tmessage={this.state.message}\n\t        \t         \tgradient={this.state.gradient}\n\t        \t         \thandleName={this.handleName}\n\t        \t         \thandleGradient={this.handleGradient}\n\t        \t         \thandleColorList={this.handleColorList}\n\t        \t         \thandleMessage={this.handleMessage}\n\t        \t         \thandleContainer={this.handleContainer}\n\t        \t         \tonSubmit={this.onSubmit}\n\t        \t         />\n\t        }\n\t      </div>\n\t    );\n\t  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport 'font-awesome/css/font-awesome.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}